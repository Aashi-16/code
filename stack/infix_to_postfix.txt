Infix to PostFix::

import java.util.*;
public class Solution {

    public int precedence(char ch)//used to check precedence of signs
    {
        if(ch=='^')
        return 3;
        else if((ch=='*') || (ch=='/'))
        return 2;
        else if((ch=='+') || (ch=='-'))
        return 1;

        return 0;
    }

    public String solve(String A) {
        Stack<Character> op= new Stack<>();
        ArrayList<Character> list= new ArrayList<>();
        String ans="";

        for(int i=0;i<A.length();i++)
        {
            char ch=A.charAt(i);
            if((precedence(ch)>0))//check whether operator or not
            {
                while(op.isEmpty()==false && precedence(op.peek())>=precedence(ch))

                {list.add(op.pop());}
                op.push(ch);
            }
            else if(ch==')')
            {
                char x= op.pop();
                while(x!='(')
                {list.add(x); x=op.pop();
                }
            }
            else if(ch=='(')
            {op.push(ch);
            }
            else
            {
                list.add(ch);
            }
        }
         while(!op.isEmpty())
        {
            list.add(op.pop());
        }
        StringBuilder builder = new StringBuilder(list.size());
        
         for(Character ch: list)
        {
            builder.append(ch);
        }
        return builder.toString();
    }
}
